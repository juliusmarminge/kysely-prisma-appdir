// Generated by prisma/post-generate.ts

import { Kysely } from "kysely";
import { PlanetScaleDialect } from "kysely-planetscale";

import {
  Generated,
  ColumnType,
} from 'kysely'

export type TransactionType = "BUY" | "SELL";

export type Possesion = {
  id: number;
  stock: string;
  amount: number;
  userId: string
}

export type Transaction = {
  id: string;
  transactedAt: ColumnType<Date | null, Date | string, Date | string>;
  units: number;
  pricePerUnit: number;
  type: TransactionType;
  userId: string;
  stock: string
}

export type StockHistory = {
  id: number;
  stock: string;
  date: ColumnType<Date, Date | string, Date | string>;
  open: number;
  close: number;
  high: number;
  average: number;
  low: number;
  volume: number
}

export type Account = {
  id: string;
  userId: string;
  type: string;
  provider: string;
  providerAccountId: string;
  refresh_token: string | null;
  refresh_token_expires_in: number | null;
  access_token: string | null;
  expires_at: number | null;
  token_type: string | null;
  scope: string | null;
  id_token: string | null;
  session_state: string | null
}

export type Session = {
  id: string;
  sessionToken: string;
  userId: string;
  expires: ColumnType<Date, Date | string, Date | string>
}

export type User = {
  id: string;
  name: string | null;
  email: string | null;
  emailVerified: ColumnType<Date | null, Date | null | string, Date | null | string>;
  image: string | null
}

export type VerificationToken = {
  identifier: string;
  token: string;
  expires: ColumnType<Date, Date | string, Date | string>
}

export type Database = {
  Possesion: Possesion;
  Transaction: Transaction;
  StockHistory: StockHistory;
  Account: Account;
  Session: Session;
  User: User;
  VerificationToken: VerificationToken;
}

export const db = new Kysely<Database>({
  dialect: new PlanetScaleDialect({
    url: process.env.DATABASE_URL,
  }),
});
